@startuml

Connection "*" -- Flight
Connection "1" -- Facility
Connection "*" -- "1" Member

Member "1" -- "*" Flight

Flight "1" -- "*" FlightPlan
Flight "1" -- "*" TrackPoint

Facility "1" -- "*" Message

GeoCoordinates "1" -- TrackPoint

Report -- "*" Facility
Report -- "*" Flight
Report "1" -- FlightPlan
Report "1" -- TrackPoint
Report "1" -- Message
Report "1" -- Connection
Report "1" -- Connection

class Member {
      vatsimID : int
      
      flights : List<Flight>
      facilities : List<Facility>
}

class Connection {
      member : Member
      firstReport : Report
      lastReport : Report

      .. from data file ..
      logonTime : Instant
      realName : String
      homeBase : String
      rating : ControllerRating

      .. technical details ..
      serverId : String
      protocolVersion : int
}

note as Note_connections
     ATC service always terminates with end of connection but
     flights continue independent of actual connections and
     flights may be prefiled by unconnected members
end note

Connection .. Note_connections

note as Note_atis_message
     decode "atis_message":
     first line prefixed "$ " => voice URL
     rest of lines => message
     multi-line formatting with "^" and special character as CR LF?
     
     voice URL should become irrelevant as of October 2019 due to removal of voice rooms
end note

Facility .. Note_atis_message
Message .. Note_atis_message

class Facility {
      connection : Connection
      name : String
      type : FacilityType
      frequencyKilohertz : int
      messagesByUpdateTime : NavigableMap<Instant, Message>
}

note as Note_facility
     Geo coordinates and visibility ranges from
     data files do not make much sense.
     If such information is needed, retrieve it
     from quality sources instead.
end note

Facility .. Note_facility

class Message {
      facility : Facility
      reportFirstSeen : Report
      message : String
}

class Flight {
      member : Member
      connections : Collection<Connection>
      flightPlanByRevision : NavigableMap<Integer, FlightPlan>
      callsign : String
      departureTimeActual : Instant

      track : SortedSet<TrackPoint>
}

class GeoCoordinates {
      latitude : double
      longitude : double
      altitude : int
      isAltitudeUnitFeet : boolean
}

class TrackPoint {
      report : Report
      flight : Flight
      
      .. tracking ..
      geoCoordinates : GeoCoordinates
      heading : int
      groundSpeed : int
      transponderCode : int
      qnh : BarometricPressure
}

class FlightPlan {
      flight : Flight
      reportFirstSeen : Report

      .. basic information ..
      revision : int
      flightPlanType : String
      departureTimePlanned : LocalTime

      .. tracking ..
      route : String
      remarks : String
      
      .. aircraft and performance ..
      wakeCategory : char
      aircraftType : String
      equipmentCode : char
      trueAirSpeed : int
      altitude : int
      estimatedTimeEnroute : Duration
      estimatedTimeFuel : Duration

      .. airport information ..
      departureAirportCode : String
      destinationAirportCode : String
      alternateAirportCode : String
}

note as Note_flightplan
     fields for departure and destination airport coordinates
     exist in data files but seem unused and thus have been excluded,
     look up ICAO codes instead if needed
end note

FlightPlan .. Note_flightplan

class Report {
      facilities : Collection<Facility>
      flights : Collection<Flight>

      .. meta information (data file) ..
      recordTime : Instant
      connectedClients : int

      .. meta information (fetching) ..
      fetchTime : Instant
      fetchUrl : String
      fetchNode : String

      .. meta information (processing) ..
      parseTime : Instant
      parserRejectedLines : int
}

/'
skinparam Arrow {
          Color #white
          FontColor #white
}
'/

@enduml
